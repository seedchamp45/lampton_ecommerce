    <% param_prefix = "payment_source[#{payment_method.id}]" %>
    <div style="display: none;">
     <%= text_field_tag "#{param_prefix}[name]", "#{@order.billing_firstname} #{@order.billing_lastname}", { id: "name_on_card_#{payment_method.id}", autocomplete: "cc-name" } %>
   </div>
   <div id="credit">
    <div class="row">
      <div class="col col-sm-6 col-md-6 col-lg-6 col-xl-6">
        
       
        <div class="payment_credit_text_b">Code Number</div>

        <ul class="nav w-100">
          <%= text_field_tag "#{param_prefix}[number]", '', {id: 'card_number', class: 'required cardNumber form-control mt-2 mb-4', size: 19, maxlength: 19, autocomplete: "cc-number", type: "tel"} %>
          &nbsp;
          <span id="card_type" style="display:none;">
            ( <span id="looks_like" ><%= Spree.t(:card_type_is) %> <span id="type"></span></span>
            <span id="unrecognized"><%= Spree.t(:unrecognized_card_type) %></span>
            )
          </span>
        </ul>
      </div>



      <div class="col col-sm-6 col-md-6 col-lg-6 col-xl-6">
        <div class="payment_credit_text_b">Name on card</div>
        <%= text_field_tag "#{param_prefix}[name]", "#{@order.billing_firstname} #{@order.billing_lastname}", { id: "name_on_card_#{payment_method.id}", autocomplete: "cc-name" ,class: "required form-control mt-2 mb-4"} %>

      </div>
      <div class="col col-sm-6 col-md-6 col-lg-6 col-xl-6">
        <div class="payment_credit_text_b">Expiry Date</div>
        <ul class="payment_ul_credit">
          <%= text_field_tag "#{param_prefix}[expiry]", '', id: 'card_expiry', class: "required cardExpiry form-control mt-2 mb-4 d-inline-block inputclass", placeholder: "MM / YY", type: "tel" %>

        </ul>

      </div>
      <div class="col col-sm-6 col-md-6 col-lg-6 col-xl-6">
        <div class="payment_credit_text_b">CVV</div>
        <ul class="payment_ul_credit">
          <%= text_field_tag "#{param_prefix}[verification_value]", '', {id: 'card_code', class: 'required cardCode form-control mt-2 mb-4 d-inline-block inputclass', size: 5, type: "tel", autocomplete: "off"} %>
          

        </ul>

      </div>
    </div>
  </div>

  <% if @order.bill_address %>
  <%= fields_for "#{param_prefix}[address_attributes]", @order.bill_address do |f| %>
  <%= render partial: 'spree/address/form_hidden', locals: { form: f } %>
  <% end %>
  <% end %>

  <%= hidden_field_tag "#{param_prefix}[cc_type]", '', id: "cc_type", class: 'ccType' %>




<script src="https://cdn.omise.co/omise.js"></script>

  <!-- Include your app.js. -->
<script>

// Set your Omise public key to authenticate against Omise API. This allows card information to be sent directly to Omise.
Omise.setPublicKey('pkey_test_5b9z');

var checkoutForm = document.getElementById('checkout-form')
    checkoutForm.addEventListener('submit', submitHandler, false);

// Submit handler for checkout form.
function submitHandler(event) {
  event.preventDefault();

  /*
  NOTE: Using `data-name` to prevent sending credit card information fields to the backend server via HTTP Post
  (according to the security best practice https://www.omise.co/security-best-practices#never-send-card-data-through-your-servers).
  */
  var cardObject = {
    name:             document.querySelector('[data-name="nameOnCard"]').value,
    number:           document.querySelector('[data-name="cardNumber"]').value,
    expiration_month: document.querySelector('[data-name="expiryMonth"]').value,
    expiration_year:  document.querySelector('[data-name="expiryYear"]').value,
    security_code:    document.querySelector('[data-name="securityCode"]').value
  };

  Omise.createToken('card', cardObject, function(statusCode, response) {
    if (statusCode === 200) {
      // Success: assign Omise token back to your checkout form.
      checkoutForm.omiseToken.value = response.id;

      // Then, perform a form submit action.
      checkoutForm.submit();
    }
    else {
      // Error: display an error message. Note that `response.message` contains
      // a preformatted error message. Also note that `response.code` will be
      // "invalid_card" in case of validation error on the card.

      console.log(response.message);
    }
  });
}



</script>
